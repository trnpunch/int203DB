/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import model.Teacher;

/**
 *
 * @author lambopunchh
 */
public class Teacher2 extends javax.swing.JFrame {

    private Teacher t;

    /**
     * Creates new form Teacher
     */
    public Teacher2() {
        initComponents();
        setLocationRelativeTo(null);
    }

    public Teacher2(Teacher th) {
        this();
        t = th;

        DefaultTableModel model = new DefaultTableModel() {
        };

        subject.setModel(model);

        model.addColumn("COURSEID");
        model.addColumn("COUSRSENAME");
        tname.setText(""+t.gettName());
        Connection connect = null;
        Statement s = null;
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver");
            connect = DriverManager.getConnection("jdbc:derby://localhost:1527/DB203", "DB203", "db203");
            s = connect.createStatement();
            PreparedStatement rs = connect.prepareStatement("SELECT c.COURSEID,c.COUSRSENAME FROM DB203.TEACHER t JOIN COURSE c ON c.TEACHERID = t.TEACHERID WHERE c.TEACHERID =" + t.getTeacherId()+"ORDER BY c.COURSEID");
            ResultSet rec = rs.executeQuery();
            int row = 0;

            while ((rec != null) && (rec.next())) {

                model.addRow(new Object[0]);

                model.setValueAt(rec.getString("COURSEID"), row, 0);
                model.setValueAt(rec.getString("COUSRSENAME"), row, 1);

                row++;
            }
            rec.close();
        } catch (Exception e) {
            System.out.println("chkgrade error gui");
            System.out.println(e.getStackTrace());
            System.out.println(e.getMessage());

        }
        
      

//To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        subject = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        student = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        tname = new javax.swing.JLabel();
        nulldata = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Teacher");

        subject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "NAME"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        subject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                subjectMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(subject);

        student.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "COURSENAME", "YEAR/SEMESTER", "SNAME", "GRADE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(student);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("SEARCH");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jToggleButton1.setText("BACK");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nulldata, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(tname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jToggleButton1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nulldata, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    Connection connect = null;
    Statement s = null;
    private void subjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subjectMouseClicked
        // TODO add your handling code here:
        int Table_click = 0;
        try {
            int row = subject.getSelectedRow();
            Table_click = Integer.parseInt(subject.getModel().getValueAt(row, 0).toString());
            Class.forName("org.apache.derby.jdbc.ClientDriver");
            connect = DriverManager.getConnection("jdbc:derby://localhost:1527/DB203", "DB203", "db203");
            
            PreparedStatement rs = connect.prepareStatement("select * from COURSE where COURSEID = " + Table_click);
            ResultSet rec = rs.executeQuery();
            
            if(rec.next()){
                String add1 = rec.getString("COURSEID");
                jTextField1.setText(add1);
            }

        } catch (Exception e) {
           
            e.printStackTrace();
        }
        
            DefaultTableModel model2 = new DefaultTableModel() {
        };
       student.setModel(model2);
        model2.addColumn("COUSRSENAME");
        model2.addColumn("YEARS/SEMESTER");
        model2.addColumn("STUDENTID");
        model2.addColumn("GRADE");
        model2.addColumn("TEACHERID");
     
        Connection connect = null;
        Statement s = null;

        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver");
            connect = DriverManager.getConnection("jdbc:derby://localhost:1527/DB203", "DB203", "db203");
            s = connect.createStatement();
            PreparedStatement rs = connect.prepareStatement("SELECT c.COUSRSENAME,s.YEARS||'/'||s.SEMESTER AS \"YEARS/SEMESTER\" ,  s.STUDENTID ,s.GRADE ,t.TEACHERID\n" +
"FROM DB203.TEACHER t JOIN COURSE c ON t.TEACHERID = c.TEACHERID \n" +
"                              JOIN TABLEPROGRAM tp ON tp.COURSEID = c.COURSEID\n" +
"                              JOIN STUDENTCOURSE s ON s.TABLEPROGRAMID = tp.TABLEPROGRAMID\n" +
"                              JOIN STUDENT st ON st.STUDENTID =s.STUDENTID \n" +
"where c.COURSEID = "+Table_click+" and GRADE = '' ");
           
            ResultSet rec2 = rs.executeQuery();
            int row2 = 0;
            
            while ((rec2 != null) && (rec2.next())) {

                model2.addRow(new Object[0]);
                model2.setValueAt(rec2.getString("COUSRSENAME"), row2, 0);
                model2.setValueAt(rec2.getString("YEARS/SEMESTER"), row2, 1);
                model2.setValueAt(rec2.getString("STUDENTID"), row2, 2);
                model2.setValueAt(rec2.getString("GRADE"), row2, 3);
                model2.setValueAt(rec2.getString("TEACHERID"), row2, 4);
               

                row2++;

            }
            rec2.close();

        } catch (NullPointerException e) {
           System.out.println("NO data");
            e.printStackTrace();
        }catch(Exception e){
          e.printStackTrace();

        }

    }//GEN-LAST:event_subjectMouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        LoginT lo = new LoginT();
        lo.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int id = Integer.parseInt(jTextField1.getText());
        
         DefaultTableModel model2 = new DefaultTableModel() {
        };
        student.setModel(model2);
        model2.addColumn("COUSRSENAME");
        model2.addColumn("YEARS/SEMESTER");
        model2.addColumn("STUDENTID");
        model2.addColumn("GRADE");
        model2.addColumn("TEACHERID");
     
        Connection connect = null;
        Statement s = null;

        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver");
            connect = DriverManager.getConnection("jdbc:derby://localhost:1527/DB203", "DB203", "db203");
            s = connect.createStatement();
            PreparedStatement rs = connect.prepareStatement("SELECT c.COUSRSENAME,s.YEARS||'/'||s.SEMESTER AS \"YEARS/SEMESTER\" ,  s.STUDENTID ,s.GRADE ,t.TEACHERID\n" +
"FROM DB203.TEACHER t JOIN COURSE c ON t.TEACHERID = c.TEACHERID \n" +
"                              JOIN TABLEPROGRAM tp ON tp.COURSEID = c.COURSEID\n" +
"                              JOIN STUDENTCOURSE s ON s.TABLEPROGRAMID = tp.TABLEPROGRAMID\n" +
"                              JOIN STUDENT st ON st.STUDENTID =s.STUDENTID \n" +
"where c.COURSEID = "+id+" and GRADE ='' ");
           
            ResultSet rec2 = rs.executeQuery();
           
            int row2 = 0;
            while ((rec2 != null) && (rec2.next())) {
               
                model2.addRow(new Object[0]);
                model2.setValueAt(rec2.getString("COUSRSENAME"), row2, 0);
                model2.setValueAt(rec2.getString("YEARS/SEMESTER"), row2, 1);
                model2.setValueAt(rec2.getString("STUDENTID"), row2, 2);
                model2.setValueAt(rec2.getString("GRADE"), row2, 3);
                model2.setValueAt(rec2.getString("TEACHERID"), row2, 4);
               

                row2++;

            }
            rec2.close();
            
            

        } catch (NullPointerException e) {
           System.out.println("NO data");
            e.printStackTrace();
        }catch(Exception e){
          e.printStackTrace();

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Teacher2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Teacher2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Teacher2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Teacher2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Teacher2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel nulldata;
    private javax.swing.JTable student;
    private javax.swing.JTable subject;
    private javax.swing.JLabel tname;
    // End of variables declaration//GEN-END:variables
}
